DROP TABLE CLIENTES PURGE;

CREATE TABLE CLIENTES (
  id    NUMBER GENERATED BY DEFAULT ON NULL AS IDENTITY PRIMARY KEY,
  nome  VARCHAR2(100) NOT NULL,
  email VARCHAR2(120) UNIQUE
);

INSERT INTO CLIENTES (NOME, EMAIL) VALUES ('Marcelo', 'marcelo@email.com');
INSERT INTO CLIENTES (NOME, EMAIL) VALUES ('Kaike', "kaike@email.com");
INSERT INTO CLIENTES (NOME, EMAIL) VALUES ('Ana', 'ana@email.com');

DROP TABLE PRODUTO PURGE;

CREATE TABLE PRODUTOS (
  id     NUMBER GENERATED BY DEFAULT ON NULL AS IDENTITY PRIMARY KEY,
  nome   VARCHAR2(100) NOT NULL,
  preco  NUMBER(10,2)  NOT NULL CHECK (preco >= 0),
  tipo   VARCHAR2(50) NOT NULL
);
 
INSERT
  INTO PRODUTOS (nome, preco, tipo) VALUES ('Notebook X', 3000, 'Notebook'),
                                           ('Notebook Y', 3500, 'Notebook'),
                                           ('Celular Z', 2000, 'Celular');

SELECT ID, NOME, PRECO, TIPO FROM PRODUTOS;

UPDATE PRODUTOS SET PRECO = 300 WHERE PRECO = 3000;
UPDATE PRODUTOS SET PRECO = 350 WHERE PRECO = 3500;
UPDATE PRODUTOS SET PRECO = 200 WHERE PRECO = 2000;

DROP TABLE PEDIDOS PURGE;

CREATE TABLE PEDIDOS (
  id         NUMBER GENERATED BY DEFAULT ON NULL AS IDENTITY PRIMARY KEY,
  cliente_id NUMBER NOT NULL,
  produto_id NUMBER NOT NULL,
  status     VARCHAR2(20) NOT NULL CHECK (status IN ('Aberto','Finalizado','Cancelado'))
);

SELECT ID, CLIENTE_ID, PRODUTO_ID,STATUS FROM PEDIDOS

DELETE FROM PEDIDOS
WHERE STATUS = 'CANCELADO'

INSERT INTO PEDIDOS (cliente_id, produto_id, status) VALUES (1, 1, 'Aberto');
INSERT INTO PEDIDOS (cliente_id, produto_id, status) VALUES (2, 2, 'Cancelado');
INSERT INTO PEDIDOS (cliente_id, produto_id, status) VALUES (3, 3, 'Finalizado');
INSERT INTO PEDIDOS (cliente_id, produto_id, status) VALUES (1, 2, 'Cancelado');

CREATE TABLE CLIENTES_STG(
    NOME VARCHAR2(100) NOT NULL,
    EMAIL VARCHAR2(200) NOT NULL
);

INSERT INTO CLIENTES_STG (NOME, EMAIL) VALUES ('Marcelo Atualizado', 'marcelo@email.com');
INSERT INTO CLIENTES_STG (NOME, EMAIL) VALUES ('Kaike Novo', 'kaike@email.com');

MERGE INTO CLIENTES c
USING CLIENTES_STG s
    ON (c.EMAIL = s.EMAIL)
WHEN MATCHED THEN
    UPDATE SET c.NOME = s.NOME
WHEN NOT MATCHED THEN
    INSERT (NOME, EMAIL)
    VALUES (s.NOME, s.EMAIL);
